classdef QPSKBitsGeneratorR < matlab.System
 properties (Nontunable)
 MessageLength = 112;
 BernoulliLength = 69;
 ScramblerBase = 2;
 ScramblerPolynomial = [1 1 1 0 1];
 ScramblerInitialConditions = [0 0 0 0];
 end
 
 properties (Access=private)
 pHeader
 pScrambler
 pMsgStrSet
 pCount
 end
 
 methods
 function obj = QPSKBitsGeneratorR(varargin)
 setProperties(obj,nargin,varargin{:});
 end
 end
 
 methods (Access=protected)
 function setupImpl(obj, ~)
 bbc = [+1 +1 +1 +1 +1 -1 -1 +1 +1 -1 +1 -1 +1 +1 +1 +1 +1 +1 -1 -1 +1 +1 -1 +1 -1 +1]; % Bipolar Barker Code
 ubc = ((bbc + 1) / 2)'; % Unipolar Barker Code
 temp = (repmat(ubc,1,2))';
 obj.pHeader = temp(:);
 obj.pCount = 0;
 obj.pScrambler = comm.Scrambler(obj.ScramblerBase, ...
 obj.ScramblerPolynomial, obj.ScramblerInitialConditions);
 obj.pMsgStrSet = ['Wang & Fan. 1000';...
 'Wang & Fan. 1001';...
 'Wang & Fan. 1002';...
 'Wang & Fan. 1003';...
 'Wang & Fan. 1004';...
 'Wang & Fan. 1005';...
 'Wang & Fan. 1006';...
 'Wang & Fan. 1007';...
 'Wang & Fan. 1008';...
 'Wang & Fan. 1009';...
 'Wang & Fan. 1010';...
 'Wang & Fan. 1011';...
 'Wang & Fan. 1012';...
 'Wang & Fan. 1013';...
 'Wang & Fan. 1014';...
 'Wang & Fan. 1015';...
 'Wang & Fan. 1016';...
 'Wang & Fan. 1017';...
 'Wang & Fan. 1018';...
 'Wang & Fan. 1019';...
 'Wang & Fan. 1020';...
 'Wang & Fan. 1021';...
 'Wang & Fan. 1022';...
 'Wang & Fan. 1023';...
 'Wang & Fan. 1024';...
 'Wang & Fan. 1025';...
 'Wang & Fan. 1026';...
 'Wang & Fan. 1027';...
 'Wang & Fan. 1028';...
 'Wang & Fan. 1029';...
 'Wang & Fan. 1030';...
 'Wang & Fan. 1031';...
 'Wang & Fan. 1032';...
 'Wang & Fan. 1033';...
 'Wang & Fan. 1034';...
 'Wang & Fan. 1035';...
 'Wang & Fan. 1036';...
 'Wang & Fan. 1037';...
 'Wang & Fan. 1038';...
 'Wang & Fan. 1039';...
 'Wang & Fan. 1040';...
 'Wang & Fan. 1041';...
 'Wang & Fan. 1042';...
 'Wang & Fan. 1043';...
 'Wang & Fan. 1044';...
 'Wang & Fan. 1045';...
 'Wang & Fan. 1046';...
 'Wang & Fan. 1047';...
 'Wang & Fan. 1048';...
 'Wang & Fan. 1049';...
 'Wang & Fan. 1050';...
 'Wang & Fan. 1051';...
 'Wang & Fan. 1052';...
 'Wang & Fan. 1053';...
 'Wang & Fan. 1054';...
 'Wang & Fan. 1055';...
 'Wang & Fan. 1056';...
 'Wang & Fan. 1057';...
 'Wang & Fan. 1058';...
 'Wang & Fan. 1059';...
 'Wang & Fan. 1060';...
 'Wang & Fan. 1061';...
 'Wang & Fan. 1062';...
 'Wang & Fan. 1063';...
 'Wang & Fan. 1064';...
 'Wang & Fan. 1065';...
 'Wang & Fan. 1066';...
 'Wang & Fan. 1067';...
 'Wang & Fan. 1068';...
 'Wang & Fan. 1069';...
 'Wang & Fan. 1070';...
 'Wang & Fan. 1071';...
 'Wang & Fan. 1072';...
 'Wang & Fan. 1073';...
 'Wang & Fan. 1074';...
 'Wang & Fan. 1075';...
 'Wang & Fan. 1076';...
 'Wang & Fan. 1077';...
 'Wang & Fan. 1078';...
 'Wang & Fan. 1079';...
 'Wang & Fan. 1080';...
 'Wang & Fan. 1081';...
 'Wang & Fan. 1082';...
 'Wang & Fan. 1083';...
 'Wang & Fan. 1084';...
 'Wang & Fan. 1085';...
 'Wang & Fan. 1086';...
 'Wang & Fan. 1087';...
 'Wang & Fan. 1088';...
 'Wang & Fan. 1089';...
 'Wang & Fan. 1090';...
 'Wang & Fan. 1091';...
 'Wang & Fan. 1092';...
 'Wang & Fan. 1093';...
 'Wang & Fan. 1094';...
 'Wang & Fan. 1095';...
 'Wang & Fan. 1096';...
 'Wang & Fan. 1097';...
 'Wang & Fan. 1098';...
 'Wang & Fan. 1099']; 
 end
 
 function [y,msg] = stepImpl(obj)
 
 % Converts the message string to bit format
 cycle = mod(obj.pCount,100);
 msgStr = obj.pMsgStrSet(cycle+1,:);
 msgBin = de2bi(int8(msgStr),7,'left-msb');
 msg = reshape(double(msgBin).',obj.MessageLength,1);
 data = [msg ; randi([0 1], obj.BernoulliLength, 1)];
 
 % Scramble the data
 scrambledData = step(obj.pScrambler, data);
 
 % Append the scrambled bit sequence to the header
 y = [obj.pHeader ; scrambledData];
 
 obj.pCount = obj.pCount+1;
 end
 
 function resetImpl(obj)
 obj.pCount = 0;
 reset(obj.pScrambler);
 end
 
 function releaseImpl(obj)
 release(obj.pScrambler);
 end
 
 function N = getNumInputsImpl(~)
 N = 0; 
 end
 
 function N = getNumOutputsImpl(~)
 N = 2;
 end
 end
end
